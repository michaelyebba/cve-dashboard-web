{"version":3,"sources":["components/header/Header.js","components/footer/Footer.js","components/datagrid/Cverecord.js","components/datagrid/Datagrid.js","components/datagrid/Productsearch.js","components/pages/Dashboard.js","components/pages/Pagenotfound.js","components/pages/Cvedetail.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","id","className","react_router_dom","to","Footer","CveRecord","cve","severity","category","productSummary","formattedDate","Datagrid","title","scope","cves","map","e","i","Cverecord","key","ProductSearch","type","placeholder","value","productSearchInput","onChange","productSearchOnChangeHandler","onClick","productSearchClickHandler","DashboardPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","api","state","isLoading","bind","assertThisInitialized","productSearchOnClickHandler","fetchData","prevProps","setState","_this2","url","axios","get","then","response","data","_this3","target","header_Header","Productsearch","style","maxWidth","margin","padding","datagrid_Datagrid","footer_Footer","Component","defaultProps","PageNotFound","CveDetailPage","products","cveId","description","product","App","react_router","path","exact","component","render","severityName","match","params","Dashboard","Cvedetail","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a5401c6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom'; /* gives a class of active to the current link*/\r\n\r\nlet Header = (props) => {\r\n    return (\r\n        <header id=\"header\">\r\n        <div className=\"container\">\r\n          <nav>\r\n            <Link to=\"/\" className=\"logo\"><i className=\"fas fa-exclamation-triangle\"></i>TOP 10 CVE Dashboard</Link>\r\n            <ul className=\"reports\">\r\n              <li><NavLink to=\"/\">ALL</NavLink></li>\r\n              <li><NavLink to=\"/cves/severity/HIGH\">HIGH</NavLink></li>\r\n              <li><NavLink to=\"/cves/severity/MEDIUM\">MEDIUM</NavLink></li>\r\n              <li><NavLink to=\"/cves/severity/LOW\">LOW</NavLink></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nlet Footer = (props) => {\r\n\r\n    return (\r\n        <footer id=\"footer\">\r\n        <div className=\"container\">\r\n           <p>            \r\n                <small>Common Vulnerabilities and Exposures (CVE) is a catalog of known security threats. \r\n                The catalog is sponsored by the United States Department of Homeland Security (DHS). </small>             \r\n            </p>\r\n        </div>\r\n      </footer>       \r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nlet CveRecord = (props) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td><Link to={\"/cve/\" + props.cve.id}>{props.cve.id}</Link></td>            \r\n            <td>{props.cve.severity}</td>\r\n            <td>{props.cve.category}</td>\r\n            <td>{props.cve.productSummary}</td>\r\n            <td>{props.cve.formattedDate}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default CveRecord;","import React from 'react'\r\nimport CveRecord from './Cverecord'\r\n\r\nlet Datagrid = (props) => {\r\n\r\n    return (\r\n\r\n        <section id=\"report-section\">\r\n          <div className=\"container\">\r\n            <div className=\"report-title\">\r\n              <p className=\"h3\">{props.title} <small className=\"muted\">Common Vulnerabilities and Exposures (CVE)</small></p>\r\n            </div>\r\n            <div className=\"cve-table-container\">\r\n                <table className=\"table table-striped table-sm\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                        <th scope=\"col\">ID</th>\r\n                        <th scope=\"col\">SEVERITY</th>\r\n                        <th scope=\"col\">CATEGORY</th>\r\n                        <th scope=\"col\">PRODUCT(S)</th>\r\n                        <th scope=\"col\">DATE</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {props.cves.map((e,i) => {\r\n                        return (\r\n                            <CveRecord key={i} cve={e}/>\r\n                        )\r\n                    })}                          \r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n          </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Datagrid;","import React from 'react'\r\n\r\nlet ProductSearch = (props) => {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <form className=\"form-inline\">\r\n                    <input type=\"search\" className=\"form-control mr-sm-2\" placeholder=\"Search by product\"\r\n                        value={props.productSearchInput} onChange={props.productSearchOnChangeHandler}/>\r\n                    <input type=\"button\" value=\"Search\" className=\"btn btn-outline-success my-2 my-sm-0\" onClick={props.productSearchClickHandler}/>\r\n                </form>\r\n            </nav>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductSearch;","import React, {Component} from 'react';\r\nimport Header from '../header/Header';\r\nimport Footer from '../footer/Footer';\r\nimport Datagrid from '../datagrid/Datagrid';\r\nimport axios from 'axios';\r\nimport ProductSearch from '../datagrid/Productsearch';\r\n\r\nclass DashboardPage extends Component {\r\n\r\n    api = \"https://cve-dashboard-service.herokuapp.com/api/\";\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cves: [],\r\n            productSearchInput: \"\",\r\n            isLoading: true    \r\n        }\r\n\r\n        this.productSearchOnChangeHandler = this.productSearchOnChangeHandler.bind(this);\r\n        this.productSearchOnClickHandler = this.productSearchOnClickHandler.bind(this);\r\n\r\n    }\r\n\r\n    /**\r\n     * Make ajax call to the cve dashboard service here\r\n     */\r\n    componentDidMount () {\r\n        this.fetchData();\r\n    }\r\n\r\n    /**\r\n     * Check if user changed the severity and re-fetch the data if they did\r\n     * @param {*} prevProps \r\n     */\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.severity !== this.props.severity) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Default fetch method to search by severity or return top 10\r\n     */\r\n    fetchData() {\r\n        let url = this.api + \"cves\";\r\n        if (this.props.severity) {\r\n            url = this.api + \"cves?severity=\" + this.props.severity;\r\n        }\r\n\r\n        axios.get(url).then ((response) => {\r\n                this.setState({\r\n                    cves: response.data,\r\n                    isLoading: false\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Update the grid when user searchs by product\r\n     * @param {*} e \r\n     */\r\n    productSearchOnClickHandler(e) {\r\n        this.setState({\r\n            isLoading: true\r\n        })\r\n        let url = this.api + \"cves?product=\" + this.state.productSearchInput;\r\n        axios.get(url).then ((response) => {\r\n                this.setState({\r\n                    cves: response.data,\r\n                    isLoading: false\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Event handler to update state of the product search control\r\n     * \r\n     * @param {*} e \r\n     */\r\n    productSearchOnChangeHandler(e) {\r\n        this.setState({\r\n            productSearchInput: e.target.value\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Display Header, ProductSearch, and Datagrid\r\n     */\r\n    render () {\r\n        \r\n        const loadingStyles = {\r\n            \"maxWidth\": \"1000px\",\r\n            \"margin\": \"auto\",\r\n            \"padding\": \"20px 20px\"\r\n        };\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Header />\r\n                <ProductSearch \r\n                    productSearchInput={this.state.productSearchInput} \r\n                    productSearchOnChangeHandler={this.productSearchOnChangeHandler}\r\n                    productSearchClickHandler={this.productSearchOnClickHandler}/>\r\n                    \r\n                {this.state.isLoading?\r\n                    <p style={loadingStyles}>Loading, please wait...</p> :\r\n\r\n                    <Datagrid title={this.props.title} cves={this.state.cves}/>\r\n                } \r\n\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nDashboardPage.defaultProps = {\r\n    title: \"ALL\"\r\n}\r\n\r\nexport default DashboardPage;","import React, {Component} from 'react';\r\nimport Header from '../header/Header';\r\nimport Footer from '../footer/Footer';\r\n\r\nclass PageNotFound extends Component {\r\n\r\n    render () {\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Header />\r\n\r\n                <section id=\"report-section\">\r\n                    <div className=\"container\">\r\n                        <div className=\"report-title\">\r\n                            <p className=\"h3\">Page Not Found</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default PageNotFound;","import React, {Component} from 'react';\r\nimport Header from '../header/Header';\r\nimport Footer from '../footer/Footer';\r\nimport axios from 'axios';\r\n\r\nclass CveDetailPage extends Component {\r\n\r\n    url = \"https://cve-dashboard-service.herokuapp.com/api/cves/\";\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cve: [],\r\n            products: [],\r\n            isLoading: true    \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Calls the rest service\r\n     */\r\n    fetchData() {\r\n        axios.get(this.url + this.props.cveId).then ((response) => {\r\n            this.setState({\r\n                cve: response.data,\r\n                products: response.data.products,\r\n                isLoading: false\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * load the detail\r\n     */\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    /**\r\n     * Reload the detail if user clicks on a different id\r\n     * @param {} prevProps \r\n     */\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.cveId !== this.props.cveId) {\r\n            this.setState({\r\n                isLoading: true\r\n            })\r\n            this.fetchData();\r\n        }\r\n    }\r\n\r\n    render () {\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <section id=\"report-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"report-title\">\r\n                        <p className=\"h3\">CVE Detail</p>\r\n                    </div>                \r\n                    <div>\r\n                        <table className=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Key</th>\r\n                                    <th>Value</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>ID</td>\r\n                                    <td>{this.state.cve.id}</td>\r\n                                </tr>                      \r\n                                <tr>\r\n                                    <td>Date</td>\r\n                                    <td>{this.state.cve.formattedDate}</td>\r\n                                </tr>                                                        \r\n                                <tr>\r\n                                    <td>Severity</td>\r\n                                    <td>{this.state.cve.severity}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Description</td>\r\n                                    <td>{this.state.cve.description}</td>\r\n                                </tr>                                           \r\n                                <tr>\r\n                                    <td>Category</td>\r\n                                    <td>{this.state.cve.category}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Products(s)</td>\r\n                                    <td>\r\n                                       {this.state.products.map((product, key) => {\r\n                                           return (\r\n                                                <p key={key}>{product}</p>\r\n                                           )\r\n                                       })}                                \r\n                                    </td>\r\n                                </tr>                                                               \r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\n\r\nexport default CveDetailPage;","import React, { Component } from 'react';\nimport DashboardPage from './components/pages/Dashboard'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport PageNotFound from './components/pages/Pagenotfound';\nimport CveDetailPage from './components/pages/Cvedetail';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n\n          <Route path=\"/\" exact component={DashboardPage}/>\n          <Route path=\"/cves/severity/:severityName\" exact render={(props) => {\n              let {severityName} = props.match.params;\n\n              return (\n                <DashboardPage title={severityName} severity={severityName}/>\n              )\n          }} />\n\n          <Route path=\"/cve/:cveId\" exact render={(props) => {\n              let {cveId} = props.match.params;\n              return (\n                <CveDetailPage cveId={cveId} />\n              )\n          }} />\n\n          <Route component={PageNotFound} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}